@page
@using Microsoft.AspNetCore.Authorization;
@model FileUpload.Pages.ViewOrdersModel
@attribute [Authorize(Roles = "ADMINISTRATOR,BROWSE")]
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>View Orders</title>
</head>
<body>
    @{
        string PageNumberString = "1";
        int PageNumber = 0;
        int pageCount = 1;

        if (Request.Query.ContainsKey("PageNumber"))
        {
            PageNumberString = Request.Query["PageNumber"].ToString();
        }
        else if (Request.HasFormContentType && Request.Form.ContainsKey("PageNumber"))
        {
            PageNumberString = Request.Form["PageNumber"].ToString();
        }

        int.TryParse(PageNumberString, out PageNumber);

        if (Model.Order.Count > 20)
        {
            pageCount = (int)Math.Ceiling((float)Model.Order.Count / 20f);
            //pageCount += 1;
        }
        <p>
            Page:

            @for (int i = 1; i <= pageCount; i++)
            {

                @if (PageNumber != i)
                {
                    <a asp-page="ViewOrders" asp-page-handler="ViewOrders" asp-route-PageNumber="@i" class="button">@i</a>
                }
                else
                {
                    <label>@i</label>
                }
            }
        </p>
    }

    <table class="styled-table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].OrderId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].PhoneNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].EmailAddress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].CompanyName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].Source)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].DateDue)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].DateCreated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].LatestTimeDue)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].Department)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].NumberOfSets)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].Status)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Order.Skip((PageNumber - 1) * 20).Take(20))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmailAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CompanyName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Source)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateDue)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LatestTimeDue)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Department)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumberOfSets)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.OrderId">Edit</a> |
                        <a asp-page="./ViewOrder" asp-route-id="@item.OrderId">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</body>
</html>
