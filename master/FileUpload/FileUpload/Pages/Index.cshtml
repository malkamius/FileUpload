@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<style>
    body {
        font-family: Arial, sans-serif;
    }

    .container {
        width: 500px;
        margin: 0 auto;
    }

    form {
        margin-top: 50px;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 5px;
    }

    input[type=text], select, textarea {
        width: 100%;
        padding: 2px;
        border: 1px solid #ccc;
        box-sizing: border-box;
        margin-top: 2px;
        margin-bottom: 12px;
        resize: vertical;
    }

    input[type=submit] {
        background-color: #4CAF50;
        color: white;
        padding: 12px 20px;
        border: none;
        cursor: pointer;
    }

        input[type=submit]:hover {
            background-color: #45a049;
        }

    h2 {
        color: #2c3e50;
    }

    .upload-area {
        border: 2px dashed #ccc;
        padding: 20px;
        text-align: center;
        margin-bottom: 16px;
        cursor: pointer;
    }

    button {
        background-color: #4CAF50;
        color: white;
        padding: 10px 20px;
        border: none;
        cursor: pointer;
        margin-bottom: 16px;
    }

    .invalid-feedback {
        color: red;
    }

    .is-invalid {
        border-color: red;
    }

    .is-valid {
        border-color: green;
    }

    #file-list-container {
        width: 500px;
        height: 200px;
        overflow: scroll;
    }

    .selectedfile {
        background-color: #cce5ff;
        cursor: pointer;
    }

    ul {
    }

    li {
        text-align: left;
    }
</style>


<div class="text-center">
    @*<h1 class="display-4">Welcome</h1>*@

    <div class="container">
        <form method="post" asp-route="Index" enctype="multipart/form-data" onsubmit="submitForm(event)" id="OrderForm">
            <input name="__RequestVerificationToken" type="hidden" value="">
            <div class="form-row">
                <div>
                    <h2>Contact Info</h2>
                    <input asp-for="Order.Name" type="text" id="Name" name="Name" placeholder="Your name.." value="@Model.Request.Cookies["name"]">
                    <input asp-for="Order.PhoneNumber" type="text" id="PhoneNumber" name="PhoneNumber" placeholder="Your phone number.." value="@Model.Request.Cookies["phonenumber"]">
                    <input asp-for="Order.EmailAddress" type="text" id="EmailAddress" name="EmailAddress" placeholder="Your email.." value="@Model.Request.Cookies["emailaddress"]">
                </div>
                <div>
                    <h2>Company Info</h2>
                    <input asp-for="Order.CompanyName" type="text" id="CompanyName" name="CompanyName" placeholder="Company name.." value="@Model.Request.Cookies["companyname"]">
                    <input asp-for="Order.Address1" type="text" id="Address1" name="Address1" placeholder="Address 1.." value="@Model.Request.Cookies["address1"]">
                    <input asp-for="Order.Address2" type="text" id="Address2" name="Address2" placeholder="Address 2.." value="@Model.Request.Cookies["address2"]">
                    <input asp-for="Order.City" type="text" id="City" name="City" placeholder="City.." value="@Model.Request.Cookies["city"]">
                    <input asp-for="Order.State" type="text" id="State" name="State" placeholder="State.." value="@Model.Request.Cookies["state"]">
                    <input asp-for="Order.ZipCode" type="text" id="ZipCode" name="ZipCode" placeholder="Zip.." value="@Model.Request.Cookies["zipcode"]">
                </div>
            </div>
            <div class="form-row">
                <div>
                    <h2>Time Constraints</h2>
                    <input asp-for="Order.DateDue" type="date" id="DateDue" name="DateDue">
                    <input asp-for="Order.LatestTimeDue" type="time" id="LatestTimeDue" name="LatestTimeDue">
                </div>
                <div>
                    <h2>Accounting Details</h2>
                    <input asp-for="Order.ProjectNumber" type="text" id="ProjectNumber" name="ProjectNumber" placeholder="Project #..">
                    <input asp-for="Order.PONumber" type="text" id="PONumber" name="PONumber" placeholder="PO #..">
                    <input asp-for="Order.ProjectName" type="text" id="ProjectName" name="ProjectName" placeholder="Project name..">
                </div>
            </div>
            <div>
                <h2>Production Specifics</h2>
                <textarea asp-for="Order.Notes" id="Notes" name="Notes" placeholder="Special Instructions.."></textarea>
            </div>

            <div>
                <h2>File Upload</h2>
                <div class="upload-area" id="fo;e=;ost">
                    Drag and Drop Files Here
                    <ul id="file-list"></ul>
                </div>
                <input type="file" id="FileSelector" name="FileSelector[]" multiple>
                <button type="button" id="remove-button">Remove Selected Items</button>
                <div></div>
            </div>
            <input type="submit" value="Submit">
        </form>
    </div>
</div>

@*Begin of form validation*@
<script>
    $(document).ready(function () {
        $('form').validate({
            rules: {
                Name: {
                    required: true,
                    minlength: 2
                },
                PhoneNumber: {
                    required: true,
                    minlength: 10,
                    number: true
                },
                EmailAddress: {
                    required: true,
                    email: true
                },
                CompanyName: {
                    required: true,
                },
                Address1: {
                    required: true,
                },
                City: {
                    required: true,
                },
                State: {
                    required: true,
                },
                ZipCode: {
                    required: true,
                    minlength: 5,
                    number: true
                },
                DueDate: {
                    required: false,
                    date: true
                },
                LatestDueTime: {
                    required: false,
                },
                ProjectNumber: {
                    required: false,
                },
                PONumber: {
                    required: false,
                },
                ProjectName: {
                    required: false,
                },
                Notes: {
                    required: false,
                }
            },
            messages: {
            },
            errorElement: 'div',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                error.insertAfter(element);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid').removeClass('is-valid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).addClass('is-valid').removeClass('is-invalid');
            }
        });
    });
</script>
@*End of form validation*@

@*Begin file input handling/remove file handling*@
<script>
    const $fileSelector = $('#FileSelector');
    const $fileList = $('#file-list');
    const $removeButton = $('#remove-button');

    $fileSelector.on('change', function (e) {
        var files = $fileSelector.get(0).files;


        for (var i = 0; i < files.length; i++) {
            var item = files[i];
            const $li = $('<li>')
                .text(item.name)
                .attr('data-path', item.name)
                .attr('data-attachment', item);
            $fileList.append($li);
            $li.get(0).attachment = item;
        }
        $fileSelector.val('');
    });

    $fileList.on('click', 'li', function () {
        $(this).toggleClass('selectedfile');
    });

    $removeButton.on('click', function (e) {

        $('.selectedfile').each(function () {
            const selectedfilePath = $(this).data('path');
            const ul = $(this).next('ul');// $(this).data('ul');
            if (ul.length == 1) {
                ul.remove();
            }
            $('.selectedfile').remove();
        });
    });
</script>
@*End file input handling/remove file handling*@

@*Handle form submission*@
<script>
    function submitForm(event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the original form
        var originalForm = document.getElementById("OrderForm");

        // Create a new form copy of original
        var newForm = new FormData(originalForm);
        
        newForm.append(originalForm.elements[0].name, originalForm.elements[0].value);
        
        function CreateFileInformation(filename, length) {
            this.FileName = filename;
            this.Length = length;
        }

        fileInformation = [];
        $('li').each(async function() {
            var file = $(this).data('attachment');
            
            if (file === undefined) return;
            
            file = $(this).get(0).attachment;
            
            if (file.isFile) {
                await file.file(function (item) {
                    var onefile = new CreateFileInformation(item.name, item.size);
                    fileInformation.push(onefile);
                });
            }
            else if (file.isFile === undefined) {
                var onefile = new CreateFileInformation(file.name, file.size);
                fileInformation.push(onefile);
            }
        });
        var jsonString = JSON.stringify(fileInformation);
        newForm.append("FileInformation", jsonString);

        var formSubmissionRequest = new XMLHttpRequest();
        
        formSubmissionRequest.open(originalForm.method, originalForm.action, true);
        formSubmissionRequest.send(newForm);
    }
</script>
@*End Handle form submission*@